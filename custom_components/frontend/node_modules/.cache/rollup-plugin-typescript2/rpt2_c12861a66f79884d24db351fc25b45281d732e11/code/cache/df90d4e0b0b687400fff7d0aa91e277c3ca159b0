{"code":"import { __decorate } from \"tslib\";\r\nimport { RippleHandlers } from \"@material/mwc-ripple/ripple-handlers\";\r\nimport { mdiPlus } from \"@mdi/js\";\r\nimport { css, html, LitElement } from \"lit\";\r\nimport { customElement, property, state, queryAsync, eventOptions } from \"lit/decorators\";\r\nimport { fireEvent } from \"custom-card-helpers\";\r\nimport { localize } from \"../localize/localize\";\r\nlet NewCameraCard = class NewCameraCard extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._shouldRenderRipple = false;\r\n        this._rippleHandlers = new RippleHandlers(() => {\r\n            this._shouldRenderRipple = true;\r\n            return this._ripple;\r\n        });\r\n    }\r\n    render() {\r\n        return html `\n      <ha-card\n        @click=${this._openAddCameraDialog}\n        class=\"add-new-camera\"\n        @focus=${this.handleRippleFocus}\n        @blur=${this.handleRippleBlur}\n        @mousedown=${this.handleRippleActivate}\n        @mouseup=${this.handleRippleDeactivate}\n        @touchstart=${this.handleRippleActivate}\n        @touchend=${this.handleRippleDeactivate}\n        @touchcancel=${this.handleRippleDeactivate}\n      >\n        <ha-svg-icon .path=${mdiPlus} id=\"icon\"></ha-svg-icon>\n        <div id=\"text\">${localize(\"common.add_camera\")}</div>\n        ${this._shouldRenderRipple ? html `<mwc-ripple></mwc-ripple>` : \"\"}\n      </ha-card>\n    `;\r\n    }\r\n    _openAddCameraDialog(_ev) {\r\n        fireEvent(this, \"add-new-camera\");\r\n    }\r\n    handleRippleActivate(evt) {\r\n        this._rippleHandlers.startPress(evt);\r\n    }\r\n    handleRippleDeactivate() {\r\n        this._rippleHandlers.endPress();\r\n    }\r\n    handleRippleFocus() {\r\n        this._rippleHandlers.startFocus();\r\n    }\r\n    handleRippleBlur() {\r\n        this._rippleHandlers.endFocus();\r\n    }\r\n    static get styles() {\r\n        return [\r\n            css `\n        ha-card {\n          display: flex;\n          flex-direction: column;\n          width: 100%;\n          position: relative;\n          align-items: center;\n          text-align: center;\n          padding: 1% 1% 1% 1%;\n          height: 100%;\n          font-size: 1.2rem;\n        }\n\n        .add-new-camera {\n          background-color: var(--card-background-color, white);\n          box-shadow: var(\n            --mdc-fab-box-shadow,\n            0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n            0px 6px 10px 0px rgba(0, 0, 0, 0.14),\n            0px 1px 18px 0px rgba(0, 0, 0, 0.12)\n          );\n          cursor: pointer;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          text-align: center;\n          padding: 4% 0;\n          font-size: 2.3rem;\n          height: 100%;\n          box-sizing: border-box;\n          justify-content: center;\n          position: relative;\n          overflow: hidden;\n          border-radius: 1.5rem;\n          font-weight: 550;\n        }\n        #text {\n          text-align: center;\n          margin-top: 10%;\n          width: 60%;\n          font-size: 2rem;\n          font-weight: 550;\n        }\n        .add-new-camera:hover > #icon {\n          background-color: var(--sidebar-selected-icon-color);\n        }\n        .add-new-camera:hover > #text {\n          color: var(--sidebar-selected-icon-color);\n        }\n        #icon {\n          background-color: rgb(144, 144, 145);\n          color: white;\n          border-radius: 100%;\n          width: 30%;\n          height: auto;\n        }\n\n        .description {\n          opacity: var(--dark-primary-opacity);\n          font-size: 14px;\n          padding: 8px 16px;\n        }\n\n        .status-new {\n          border-color: var(--hcv-color-new);\n          --mdc-theme-primary: var(--hcv-color-new);\n        }\n\n        .status-update {\n          border-color: var(--hcv-color-update);\n        }\n\n        .status-issue {\n          border-color: var(--hcv-color-error);\n        }\n\n        .new-header {\n          background-color: var(--hcv-color-new);\n          color: var(--hcv-text-color-on-background);\n        }\n\n        .issue-header {\n          background-color: var(--hcv-color-error);\n          color: var(--hcv-text-color-on-background);\n        }\n\n        .update-header {\n          background-color: var(--hcv-color-update);\n          color: var(--hcv-text-color-on-background);\n        }\n\n        .default-header {\n          padding: 2px 0 !important;\n        }\n\n        .status-border {\n          border-style: solid;\n          border-width: min(var(--ha-card-border-width, 1px), 10px);\n        }\n\n        .status-header {\n          top: 0;\n          padding: 6px 1px;\n          margin: -1px;\n          width: 100%;\n          font-weight: 500;\n          text-align: center;\n          left: 0;\n          border-top-left-radius: var(--ha-card-border-radius, 4px);\n          border-top-right-radius: var(--ha-card-border-radius, 4px);\n        }\n\n        ha-card[narrow] {\n          width: calc(100% - 24px);\n          margin: 11px;\n        }\n\n        ha-chip {\n          padding: 4px;\n          margin-top: 3px;\n        }\n      `,\r\n        ];\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], NewCameraCard.prototype, \"hass\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], NewCameraCard.prototype, \"narrow\", void 0);\r\n__decorate([\r\n    state()\r\n], NewCameraCard.prototype, \"_shouldRenderRipple\", void 0);\r\n__decorate([\r\n    queryAsync(\"mwc-ripple\")\r\n], NewCameraCard.prototype, \"_ripple\", void 0);\r\n__decorate([\r\n    eventOptions({ passive: true })\r\n], NewCameraCard.prototype, \"handleRippleActivate\", null);\r\nNewCameraCard = __decorate([\r\n    customElement(\"new-camera-card\")\r\n], NewCameraCard);\r\nexport { NewCameraCard };\r\n","references":["/workspaces/alarmo/frontend/node_modules/@material/mwc-ripple/mwc-ripple.d.ts","/workspaces/alarmo/frontend/node_modules/@material/mwc-ripple/ripple-handlers.d.ts","/workspaces/alarmo/frontend/node_modules/@mdi/js/mdi.d.ts","/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/alarmo/frontend/src/localize/localize.ts"]}
