{"code":"import { __decorate } from \"tslib\";\r\nimport { LitElement } from 'lit';\r\nimport { property } from 'lit/decorators';\r\nimport { localize } from './localize/localize';\r\nimport { ProvideHassLitMixin } from './provide-hass-lit-mixin';\r\n//import { fetchCameraList } from './data/websocket';\r\n//import { getCameraEntities } from './common';\r\nexport class CameraDashboardElement extends ProvideHassLitMixin(LitElement) {\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        if (this.racelandDashoardData === undefined) {\r\n            this.racelandDashoardData = {\r\n                language: 'en',\r\n                updates: [],\r\n                resources: [],\r\n                removed: [],\r\n                sections: [],\r\n                localize: (string, replace) => { var _a; return localize(((_a = this.racelandDashoardData) === null || _a === void 0 ? void 0 : _a.language) || 'en', string, replace); },\r\n            };\r\n        }\r\n        this.addEventListener('update-camera-dashboard', () => {\r\n            console.log('fired the event listener in the mixin class');\r\n            this._updateCameraDashboard();\r\n        });\r\n    }\r\n    _updateCameraDashboard() {\r\n        console.log('the updateCameraDashboard is being fired');\r\n        const obj = null;\r\n        let shouldUpdate = false;\r\n        Object.keys(obj).forEach(key => {\r\n            if (JSON.stringify(this.racelandDashoardData[key]) !== JSON.stringify(obj[key])) {\r\n                shouldUpdate = true;\r\n            }\r\n        });\r\n        if (shouldUpdate) {\r\n            this.racelandDashoardData = Object.assign(Object.assign({}, this.racelandDashoardData), obj);\r\n        }\r\n    }\r\n    updated(changedProps) {\r\n        super.updated(changedProps);\r\n    }\r\n}\r\n__decorate([\r\n    property({ attribute: false })\r\n], CameraDashboardElement.prototype, \"racelandDashoardData\", void 0);\r\n","references":["/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/src/data/dashboard.ts","/workspaces/alarmo/frontend/src/localize/localize.ts","/workspaces/alarmo/frontend/src/provide-hass-lit-mixin.ts"]}
