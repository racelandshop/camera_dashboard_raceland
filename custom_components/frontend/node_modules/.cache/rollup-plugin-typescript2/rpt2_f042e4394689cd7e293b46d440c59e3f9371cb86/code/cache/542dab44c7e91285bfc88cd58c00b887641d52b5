{"code":"import { __decorate } from \"tslib\";\r\nimport '@material/mwc-button/mwc-button';\r\nimport { mdiPlus, mdiChevronLeft } from '@mdi/js';\r\nimport { css, html, LitElement } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators';\r\nimport { classMap } from 'lit/directives/class-map';\r\nimport memoizeOne from 'memoize-one';\r\nimport Fuse from 'fuse.js';\r\nimport { fireEvent } from 'custom-card-helpers';\r\nimport { customSchema, customCameraExtraOptionSchema } from '../../schemas';\r\nimport { localize } from '../../localize/localize';\r\nimport '../camera-model-icon-button';\r\nimport '../search-input-round';\r\nexport const haStyleDialog = css `\n  /* mwc-dialog (ha-dialog) styles */\n  ha-dialog {\n    --mdc-dialog-min-width: 400px;\n    --mdc-dialog-max-width: 600px;\n    --mdc-dialog-heading-ink-color: var(--primary-text-color);\n    --mdc-dialog-content-ink-color: var(--primary-text-color);\n    --justify-action-buttons: space-between;\n    --mdc-switch__pointer_events: auto;\n  }\n\n  ha-dialog .form {\n    padding-bottom: 24px;\n    color: var(--primary-text-color);\n  }\n\n  a {\n    color: var(--accent-color) !important;\n  }\n\n  /* make dialog fullscreen on small screens */\n  @media all and (max-width: 500px), all and (max-height: 500px) {\n    ha-dialog {\n      --mdc-dialog-min-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-max-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --vertial-align-dialog: flex-end;\n      --ha-dialog-border-radius: 0px;\n    }\n  }\n  mwc-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n  .error {\n    color: var(--error-color);\n  }\n`;\r\nlet HuiCreateDialogCameraBrand = class HuiCreateDialogCameraBrand extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._currTabIndex = 0;\r\n        this._filter = '';\r\n        this._filterModels = memoizeOne((modelsDatabase, filter) => {\r\n            if (!filter) {\r\n                return modelsDatabase;\r\n            }\r\n            let filteredModels = modelsDatabase;\r\n            const options = {\r\n                keys: ['version'],\r\n                isCaseSensitive: false,\r\n                minMatchCharLength: 1,\r\n                threshold: 0.2,\r\n            };\r\n            const fuse = new Fuse(filteredModels, options);\r\n            filteredModels = fuse.search(filter).map(result => result.item);\r\n            return filteredModels;\r\n        });\r\n    }\r\n    async showDialog(params) {\r\n        this.modelDatabase = params.modelsInfo;\r\n    }\r\n    closeDialog() {\r\n        this.modelDatabase = undefined;\r\n        this._currTabIndex = 0;\r\n        fireEvent(this, 'dialog-closed', { dialog: this.localName });\r\n        return true;\r\n    }\r\n    render() {\r\n        if (!this.modelDatabase) {\r\n            return html ``;\r\n        }\r\n        const modelDatabase = this._filterModels(this.modelDatabase, this._filter);\r\n        const modifiedSchema = [];\r\n        const advancedOptions = [];\r\n        return html `\n      <ha-dialog\n        open\n        scrimClickAction\n        hideActions\n        @closed=${this.closeDialog}\n        class=${classMap({ table: this._currTabIndex === 1 })}\n      >\n        <div class=\"cancel\">\n          <div slot=\"heading\" class=\"heading\">\n            <ha-header-bar id=\"bar\">\n              <div slot=\"title\" class=\"main-title\" .title=${name}>\n                ${localize('common.add_camera')}\n              </div>\n              <ha-icon-button\n                slot=\"navigationIcon\"\n                dialogAction=\"cancel\"\n                .label=${this.hass.localize('ui.dialogs.more_info_control.dismiss')}\n                id=\"cancel\"\n                .path=${'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z'}\n              ></ha-icon-button>\n            </ha-header-bar>\n          </div>\n        </div>\n        <div class=\"content\">\n          <div class=\"contentFather\">\n            <div class=\"search-bar\">\n              <search-input\n                .hass=${this.hass}\n                .filter=${this._filter}\n                class=\"rounded\"\n                @value-changed=${this._handleSearchChange}\n                .label=${localize('search.brands')}\n              ></search-input>\n            </div>\n\n            <div class=\"brand-list\">\n              ${modelDatabase.map(cameraModelInfo => {\r\n            return html `\n                  <camera-model-icon-button\n                    .label=\"${cameraModelInfo.version}\"\n                    @click=${() => this._addCamera(cameraModelInfo, modifiedSchema, advancedOptions)}\n                  ></camera-model-icon-button>\n                `;\r\n        })}\n            </div>\n          </div>\n        </div>\n        <div class=\"options\">\n          <ha-fab\n            class=\"button-confirm\"\n            .label=${localize('common.custom_camera')}\n            extended\n            @click=${this._addCustomCamera}\n          >\n            <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n          </ha-fab>\n          <mwc-button class=\"button-back\" @click=${this.goBack}>\n            ${localize('common.back')}\n            <ha-svg-icon class=\"icon-back\" slot=\"icon\" .path=${mdiChevronLeft}></ha-svg-icon>\n          </mwc-button>\n        </div>\n      </ha-dialog>\n    `;\r\n    }\r\n    _addCamera(cameraModelInfo, modifiedSchema, advancedOptions) {\r\n        //Dynamically add the information for the formulary\r\n        cameraModelInfo.fields.forEach(element => {\r\n            modifiedSchema.push(element);\r\n        });\r\n        if (cameraModelInfo.advanced_options !== undefined) {\r\n            modifiedSchema.push({ name: 'advanced_options', selector: { boolean: {} } });\r\n            cameraModelInfo.advanced_options.forEach(element => {\r\n                advancedOptions.push(element);\r\n            });\r\n        }\r\n        const formSchema = {\r\n            header: { title: localize('common.add_camera') },\r\n            body: modifiedSchema,\r\n            extra_options: advancedOptions,\r\n            footer: {\r\n                back: localize('common.go_back'),\r\n                accept: localize('common.add_camera'),\r\n            },\r\n        };\r\n        fireEvent(this, 'open-camera-add-camera-form', {\r\n            cameraModelInfo: cameraModelInfo,\r\n            schema: formSchema,\r\n            data: Object.assign(Object.assign({}, cameraModelInfo.default), { still_image_url: cameraModelInfo.options.static, stream_source: cameraModelInfo.options.stream }),\r\n            formType: 'brand_camera',\r\n            backEvent: { event_name: 'open-camera-brand-dialog', modelDatabase: this.modelDatabase },\r\n        });\r\n        this.closeDialog();\r\n    }\r\n    _addCustomCamera(ev) {\r\n        const form_schema = {\r\n            header: { title: localize('common.add_camera') },\r\n            body: customSchema,\r\n            extra_options: customCameraExtraOptionSchema,\r\n            footer: {\r\n                back: localize('common.go_back'),\r\n                accept: localize('common.add_camera'),\r\n            },\r\n        };\r\n        fireEvent(this, 'open-camera-add-camera-form', {\r\n            cameraModelInfo: {},\r\n            schema: form_schema,\r\n            data: {},\r\n            formType: 'custom_camera',\r\n            backEvent: { event_name: 'open-camera-brand-dialog', modelDatabase: this.modelDatabase },\r\n        });\r\n        this.closeDialog();\r\n    }\r\n    goBack(ev) {\r\n        fireEvent(this, 'add-new-camera');\r\n        if (ev) {\r\n            ev.stopPropagation();\r\n        }\r\n        this.closeDialog();\r\n    }\r\n    _handleSearchChange(ev) {\r\n        //Check hui-card-picker more information is required\r\n        this._filter = ev.detail.value;\r\n    }\r\n    static get styles() {\r\n        return [\r\n            haStyleDialog,\r\n            css `\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            --mdc-dialog-max-height: 100%;\n            height: 100%;\n          }\n        }\n\n        @media all and (min-width: 1000px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 900px;\n          }\n        }\n        .content {\n          width: 100%;\n        }\n        .contentFather {\n          display: flex;\n          width: 100%;\n          flex-direction: column;\n          align-items: center;\n        }\n\n        search-input {\n          width: 100%;\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          hui-entity-picker-table {\n            height: calc(100vh - 158px);\n          }\n        }\n\n        ha-dialog {\n          --mdc-dialog-max-width: 500px;\n          --dialog-content-padding: 2px 24px 20px 24px;\n          --dialog-z-index: 5;\n        }\n        .options {\n          height: 50px;\n          margin-top: 8%;\n          width: 100%;\n          position: sticky;\n          float: right;\n          right: calc(16px + env(safe-area-inset-right));\n          bottom: calc(16px + env(safe-area-inset-bottom));\n          z-index: 1;\n        }\n\n        ha-header-bar {\n          --mdc-theme-on-primary: var(--primary-text-color);\n          --mdc-theme-primary: var(--mdc-theme-surface);\n          flex-shrink: 0;\n          border-bottom: 1px solid var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n\n        .button-confirm {\n          /* background-color: #4ba2ff; */\n          float: right;\n        }\n\n        .button-back {\n          --mdc-theme-primary: #7b7b7b;\n          float: left;\n          /* margin-left: 5%; */\n        }\n\n        .icon-back {\n          width: 30px;\n          height: 30px;\n        }\n\n        .search-bar {\n          height: 73px;\n          width: 80%;\n          padding: 10px 58px 20px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .add-camera {\n          float: left;\n          /* font-family: \"Roboto\"; */\n          font-style: normal;\n          font-weight: 500;\n          font-size: 36px;\n          line-height: 42px;\n          color: #303033;\n          padding: 1% 1% 1% 1%;\n          text-align: center;\n          width: 38%;\n        }\n\n        .brand-list {\n          display: grid;\n          width: 86%;\n          grid-template-columns: 30.6% 30.6% 30.6%;\n          gap: 4%;\n          padding: 0px 54px 25px;\n        }\n\n        mwc-button {\n          /* padding: 10px; */\n          text-align: center;\n          text-decoration: none;\n          display: inline-block;\n          font-size: 16px;\n          margin: 4px 2px;\n          border-radius: 30px;\n          cursor: pointer;\n          box-shadow: 0px 0px 5px 0px rgba(1, 1, 1, 0);\n          --mdc-theme-primary: white;\n          margin-bottom: 40px;\n        }\n\n        .header_button {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        mwc-tab-bar {\n          border-bottom: 1px solid var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n        camera-model-icon-button {\n          white-space: nowrap;\n        }\n        @media only screen and (max-width: 500px) {\n          .search-bar {\n            height: 55px;\n            width: 85%;\n            padding: 0px 25px 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          }\n          .brand-list {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            column-gap: 10%;\n            row-gap: 15%;\n            width: 86%;\n            padding: 0px 20px 25px;\n          }\n          camera-model-icon-button {\n            width: 100%;\n            text-align: center;\n          }\n          .content {\n            width: 100%;\n            height: 171vw;\n          }\n        }\n      `,\r\n        ];\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraBrand.prototype, \"hass\", void 0);\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraBrand.prototype, \"modelDatabase\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiCreateDialogCameraBrand.prototype, \"_currTabIndex\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiCreateDialogCameraBrand.prototype, \"_filter\", void 0);\r\nHuiCreateDialogCameraBrand = __decorate([\r\n    customElement('camera-brand-dialog')\r\n], HuiCreateDialogCameraBrand);\r\nexport { HuiCreateDialogCameraBrand };\r\n","references":["/workspaces/alarmo/frontend/node_modules/@material/mwc-button/mwc-button.d.ts","/workspaces/alarmo/frontend/node_modules/@mdi/js/mdi.d.ts","/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/node_modules/lit/directives/class-map.d.ts","/workspaces/alarmo/frontend/node_modules/memoize-one/dist/memoize-one.d.ts","/workspaces/alarmo/frontend/node_modules/fuse.js/dist/fuse.d.ts","/workspaces/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/alarmo/frontend/src/helpers/show-camera-models-dialog.ts","/workspaces/alarmo/frontend/src/types.ts","/workspaces/alarmo/frontend/src/schemas.ts","/workspaces/alarmo/frontend/src/localize/localize.ts","/workspaces/alarmo/frontend/src/components/camera-model-icon-button.ts","/workspaces/alarmo/frontend/src/components/search-input-round.ts"]}
