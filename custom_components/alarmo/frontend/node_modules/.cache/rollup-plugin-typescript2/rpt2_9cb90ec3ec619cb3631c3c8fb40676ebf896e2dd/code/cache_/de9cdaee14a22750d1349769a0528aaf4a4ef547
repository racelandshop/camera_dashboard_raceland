{"code":"import { __decorate } from \"tslib\";\r\nimport \"@material/mwc-tab/mwc-tab\"; //TODO: Required?\r\nimport \"@material/mwc-button/mwc-button\";\r\nimport { mdiPlus } from \"@mdi/js\";\r\nimport { css, html, LitElement } from \"lit\";\r\nimport { customElement, property, state } from \"lit/decorators\";\r\nimport { fireEvent } from 'custom-card-helpers';\r\nimport { classMap } from \"lit/directives/class-map\";\r\nimport memoizeOne from \"memoize-one\";\r\nimport Fuse from \"fuse.js\";\r\nimport { customSchema, customCameraExtraOptionSchema } from \"../../schemas\";\r\nimport { localize } from \"../../localize/localize\";\r\nimport { defaultIntegration } from \"../../common\";\r\nimport \"../camera-brand-icon-button\";\r\nimport \"../search-input-round\";\r\nimport \"../../../frontend-release/components/search-input\";\r\nimport \"../../../frontend-release/components/ha-fab\";\r\nimport \"../../../frontend-release/components/ha-dialog\";\r\nimport \"../../../frontend-release/components/ha-header-bar\";\r\nexport const haStyleDialog = css `\n  /* mwc-dialog (ha-dialog) styles */\n  ha-dialog {\n    /* --mdc-dialog-min-width: 400px;\n    --mdc-dialog-max-width: 600px; */\n    --mdc-dialog-heading-ink-color: var(--primary-text-color);\n    --mdc-dialog-content-ink-color: var(--primary-text-color);\n    --justify-action-buttons: space-between;\n    --mdc-switch__pointer_events: auto;\n  }\n\n  ha-dialog .form {\n    padding-bottom: 24px;\n    color: var(--primary-text-color);\n  }\n\n  a {\n    color: var(--accent-color) !important;\n  }\n\n  /* make dialog fullscreen on small screens */\n  @media all and (max-width: 500px), all and (max-height: 500px) {\n    ha-dialog {\n      --mdc-dialog-min-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-max-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --vertial-align-dialog: flex-end;\n      --ha-dialog-border-radius: 0px;\n    }\n  }\n  mwc-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n  .error {\n    color: var(--error-color);\n  }\n`;\r\nlet HuiCreateDialogCamera = class HuiCreateDialogCamera extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._currTabIndex = 0;\r\n        this._filter = \"\";\r\n        this._filterBrands = memoizeOne((cameraDatabase, filter) => {\r\n            if (!filter) {\r\n                return cameraDatabase;\r\n            }\r\n            let filteredBrands = cameraDatabase;\r\n            const options = {\r\n                keys: [\"name\"],\r\n                isCaseSensitive: false,\r\n                minMatchCharLength: 1,\r\n                threshold: 0.2,\r\n            };\r\n            const fuse = new Fuse(filteredBrands, options);\r\n            filteredBrands = fuse.search(filter).map((result) => result.item);\r\n            return filteredBrands;\r\n        });\r\n    }\r\n    async showDialog(params) {\r\n        this._cameraDatabase = params.database.Manufacturer;\r\n    }\r\n    closeDialog() {\r\n        this._cameraDatabase = undefined;\r\n        this._currTabIndex = 0;\r\n        fireEvent(this, \"dialog-closed\", { dialog: this.localName });\r\n        return true;\r\n    }\r\n    render() {\r\n        if (!this._cameraDatabase) {\r\n            return html ``;\r\n        }\r\n        const cameraDatabase = this._filterBrands(this._cameraDatabase, this._filter);\r\n        return html `\n      <ha-dialog\n        open\n        scrimClickAction\n        hideActions\n        @closed=${this.closeDialog}\n        class=${classMap({ table: this._currTabIndex === 1 })}\n      >\n        <div class=\"cancel\">\n          <div slot=\"heading\" class=\"heading\">\n            <ha-header-bar id=\"bar\">\n              <div slot=\"title\" class=\"main-title\" .title=${name}>\n                ${localize(\"common.add_camera\")}\n              </div>\n              <ha-icon-button\n                slot=\"navigationIcon\"\n                dialogAction=\"cancel\"\n                .label=${this.hass.localize(\"ui.dialogs.more_info_control.dismiss\")}\n                id=\"cancel\"\n                .path=${\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\"}\n              ></ha-icon-button>\n            </ha-header-bar>\n          </div>\n        </div>\n        <div class=\"content\">\n          <div class=\"contentFather\">\n            <div class=\"search-bar\">\n              <search-input\n                .hass=${this.hass}\n                .filter=${this._filter}\n                class=\"rounded\"\n                @value-changed=${this._handleSearchChange}\n                .label=${localize(\"search.brands\")}\n              ></search-input>\n            </div>\n\n            <div class=\"brand-list\">\n              ${cameraDatabase.map((cameraBrandInfo) => {\r\n            return html `<camera-brand-icon-button\n                  .cameraBrandInfo=${cameraBrandInfo}\n                  .label=${cameraBrandInfo.name}\n                  .cameraModelList=${cameraBrandInfo.models}\n                  .svgPath=${\"/local/brands/hikvision/\" + cameraBrandInfo.name + \".svg\"}\n                  @click=${() => this._openCameraBrandDialog(cameraBrandInfo.models)}\n                >\n                </camera-brand-icon-button>`;\r\n        })}\n            </div>\n          </div>\n        </div>\n        <div class=\"options\">\n          <ha-fab\n            class=\"button-confirm\"\n            .label=${localize(\"common.custom_camera\")}\n            extended\n            @click=${this._addCustomCamera}\n            })}\n          >\n            <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n          </ha-fab>\n        </div>\n      </ha-dialog>\n    `;\r\n    }\r\n    _openCameraBrandDialog(cameraModelsList) {\r\n        this.closeDialog();\r\n        fireEvent(this, \"open-camera-brand-dialog\", {\r\n            modelsInfo: cameraModelsList,\r\n        });\r\n    }\r\n    _addCustomCamera() {\r\n        const form_schema = {\r\n            header: { title: localize(\"common.add_camera\") },\r\n            body: customSchema,\r\n            extra_options: customCameraExtraOptionSchema,\r\n            footer: {\r\n                back: localize(\"common.go_back\"),\r\n                accept: localize(\"common.add_camera\"),\r\n            },\r\n        };\r\n        fireEvent(this, \"open-camera-add-camera-form\", {\r\n            cameraModelInfo: {},\r\n            schema: form_schema,\r\n            data: { integration: defaultIntegration },\r\n            formType: \"custom_camera\",\r\n            backEvent: { event_name: \"add-new-camera\" },\r\n        });\r\n        this.closeDialog();\r\n    }\r\n    _handleSearchChange(ev) {\r\n        //Check hui-card-picker more information is required\r\n        this._filter = ev.detail.value;\r\n    }\r\n    _cancel(ev) {\r\n        if (ev) {\r\n            ev.stopPropagation();\r\n        }\r\n        this.closeDialog();\r\n    }\r\n    static get styles() {\r\n        return [\r\n            haStyleDialog,\r\n            css `\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            --mdc-dialog-max-height: 100%;\n            height: 100%;\n          }\n        }\n\n        @media all and (min-width: 1000px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 900px;\n          }\n        }\n\n        @media all and (max-width: 500px), all and (max-height: 500px) {\n          hui-entity-picker-table {\n            height: calc(100vh - 158px);\n          }\n        }\n\n        ha-dialog {\n          --mdc-dialog-max-width: 500px;\n          --dialog-content-padding: 2px 24px 20px 24px;\n          --dialog-z-index: 5;\n        }\n        .content {\n          width: 100%;\n        }\n        .contentFather {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          width: 100%;\n        }\n\n        search-input {\n          width: 100%;\n        }\n\n        ha-header-bar {\n          --mdc-theme-on-primary: var(--primary-text-color);\n          --mdc-theme-primary: var(--mdc-theme-surface);\n          flex-shrink: 0;\n        }\n        ha-textfield::part(camera) {\n          width: 450px;\n        }\n        .button-confirm {\n          /* background-color: #4ba2ff; */\n          float: right;\n        }\n        .search-bar {\n          height: 73px;\n          width: 89%;\n          padding: 10px 40px 20px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        search-input-round {\n          float: right;\n          display: block;\n          width: 50%;\n          margin-right: 10%;\n        }\n\n        .add-camera {\n          float: left;\n          font-size: 30px;\n          font-weight: bold;\n          line-height: 42px;\n          color: #303033;\n          padding: 1% 1% 1% 1%;\n          /* text-align: center; */\n          width: 38%;\n        }\n\n        .brand-list {\n          display: grid;\n          width: 90%;\n          grid-template-columns: 1fr 1fr 1fr;\n          gap: 4%;\n          padding: 0px 55px 25px;\n        }\n\n        .cancel {\n          cursor: pointer;\n          /* padding: 20px 20px 20px 20px; */\n          width: 100%;\n        }\n        .options {\n          width: 100%;\n          margin-top: 4%;\n          position: sticky;\n          float: right;\n          right: calc(16px + env(safe-area-inset-right));\n          bottom: calc(16px + env(safe-area-inset-bottom));\n          z-index: 1;\n        }\n        mwc-button {\n          padding: 10px;\n          text-align: center;\n          text-decoration: none;\n          display: inline-block;\n          font-size: 16px;\n          margin: 4px 2px;\n          border-radius: 30px;\n          cursor: pointer;\n          box-shadow: 0px 0px 5px 0px rgba(1, 1, 1, 0);\n          --mdc-theme-primary: white;\n          margin-bottom: 40px;\n        }\n\n        .header_button {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        .cancel-icon {\n          float: right;\n          width: 40px;\n          height: 40px;\n        }\n        camera-brand-icon-button {\n          width: 81%;\n        }\n        @media only screen and (max-width: 500px) {\n          .search-bar {\n            height: 55px;\n            padding: 0px 25px 20px;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n          }\n          camera-brand-icon-button {\n            width: 80%;\n          }\n          .content {\n            height: 685px;\n          }\n        }\n        @media only screen and (max-width: 1000px) {\n          .brand-list {\n            display: grid;\n            grid-template-columns: 1fr 1fr;\n            gap: 5%;\n            width: 90%;\n            padding: 0px 8px 25px;\n          }\n          camera-brand-icon-button {\n            width: 70%;\n          }\n        }\n      `,\r\n        ];\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCamera.prototype, \"hass\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiCreateDialogCamera.prototype, \"_cameraDatabase\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiCreateDialogCamera.prototype, \"_currTabIndex\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiCreateDialogCamera.prototype, \"_filter\", void 0);\r\nHuiCreateDialogCamera = __decorate([\r\n    customElement(\"add-camera-dialog\")\r\n], HuiCreateDialogCamera);\r\nexport { HuiCreateDialogCamera };\r\n","references":["/workspaces/alarmo/frontend/node_modules/@mdi/js/mdi.d.ts","/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/directives/class-map.d.ts","/workspaces/alarmo/frontend/node_modules/memoize-one/dist/memoize-one.d.ts","/workspaces/alarmo/frontend/node_modules/fuse.js/dist/fuse.d.ts","/workspaces/alarmo/frontend/src/helpers/show-create-camera-dialog.ts","/workspaces/alarmo/frontend/src/localize/localize.ts"]}
