{"code":"import { __decorate } from \"tslib\";\r\nimport { mdiClose } from '@mdi/js';\r\nimport { css, html, LitElement } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators';\r\nimport { cache } from 'lit/directives/cache';\r\nimport { computeDomain } from 'custom-card-helpers';\r\nimport { haStyleDialog } from '../../styles/ha-styles';\r\nlet MoreInfoDialog = class MoreInfoDialog extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.large = false;\r\n        this._currTabIndex = 0;\r\n    }\r\n    showDialog(params) {\r\n        this._entityId = params.entityId;\r\n        if (!this._entityId) {\r\n            this.closeDialog();\r\n            return;\r\n        }\r\n        this.large = false;\r\n    }\r\n    closeDialog() {\r\n        this._entityId = undefined;\r\n        this._currTabIndex = 0;\r\n    }\r\n    render() {\r\n        if (!this._entityId) {\r\n            return html ``;\r\n        }\r\n        const entityId = this._entityId;\r\n        const stateObj = this.hass.states[entityId];\r\n        if (!stateObj) {\r\n            return html ``;\r\n        }\r\n        const domain = computeDomain(entityId);\r\n        const name = computeStateName(stateObj) || ' ';\r\n        return html `\n      <ha-dialog open @closed=${this.closeDialog} .heading=${name} hideActions data-domain=${domain}>\n        <div slot=\"heading\" class=\"heading\">\n          <ha-header-bar>\n            <ha-icon-button\n              slot=\"navigationIcon\"\n              id=\"cancel\"\n              dialogAction=\"cancel\"\n              .label=${this.hass.localize('ui.dialogs.more_info_control.dismiss')}\n              .path=${mdiClose}\n            ></ha-icon-button>\n            <div slot=\"title\" class=\"main-title\" .title=${name}>${name}</div>\n          </ha-header-bar>\n          <mwc-tab-bar .activeIndex=${this._currTabIndex} @MDCTabBar:activated=${this._handleTabChanged}>\n            <mwc-tab .label=${this.hass.localize('ui.dialogs.more_info_control.details')} dialogInitialFocus></mwc-tab>\n            <mwc-tab .label=${this.hass.localize('ui.dialogs.more_info_control.history')}></mwc-tab>\n          </mwc-tab-bar>\n        </div>\n        <div class=\"content\" tabindex=\"-1\" dialogInitialFocus>\n          ${cache(this._currTabIndex === 0\r\n            ? html `\n                  <more-info-content .stateObj=${stateObj} .hass=${this.hass}></more-info-content>\n                  <p>\n                    ${this.hass.localize('ui.dialogs.more_info_control.restored.not_provided')}\n                  </p>\n                  <p>\n                    ${this.hass.localize('ui.dialogs.more_info_control.restored.remove_intro')}\n                  </p>\n                  <mwc-button class=\"warning\" @click=${this._removeEntity}>\n                    ${this.hass.localize('ui.dialogs.more_info_control.restored.remove_action')}\n                  </mwc-button>\n                `\r\n            : '')}\n        </div>\n      </ha-dialog>\n    `;\r\n    }\r\n    //private _removeEntity() {\r\n    //  const entityId = this._entityId!;\r\n    //  showConfirmationDialog(this, {\r\n    //    title: this.hass.localize('ui.dialogs.more_info_control.restored.confirm_remove_title'),\r\n    //    text: this.hass.localize('ui.dialogs.more_info_control.restored.confirm_remove_text'),\r\n    //    confirmText: this.hass.localize('ui.common.remove'),\r\n    //    dismissText: this.hass.localize('ui.common.cancel'),\r\n    //    confirm: () => {\r\n    //      removeEntityRegistryEntry(this.hass, entityId);\r\n    //    },\r\n    //  });\r\n    //}\r\n    _handleTabChanged(ev) {\r\n        const newTab = ev.detail.index;\r\n        if (newTab === this._currTabIndex) {\r\n            return;\r\n        }\r\n        this._currTabIndex = ev.detail.index;\r\n    }\r\n    static get styles() {\r\n        return [\r\n            haStyleDialog,\r\n            css `\n        ha-dialog {\n          --dialog-surface-position: static;\n          --dialog-content-position: static;\n        }\n\n        ha-header-bar {\n          --mdc-theme-on-primary: var(--primary-text-color);\n          --mdc-theme-primary: var(--mdc-theme-surface);\n          /* flex-shrink: 0; */\n          display: block;\n        }\n        .content {\n          width: 85%;\n          max-width: 100%;\n          outline: none;\n        }\n        @media only screen and (max-width: 850px) and (orientation: landscape) {\n          .content {\n            position: absolute;\n            width: 100%;\n            top: 60%;\n            transform: translate(0%, -50%);\n            max-width: 100%;\n            outline: none;\n          }\n        }\n        @media only screen and (max-width: 450px) and (orientation: portrait) {\n          .content {\n            position: absolute;\n            width: 100%;\n            top: 50%;\n            transform: translate(0%, -50%);\n            max-width: 100%;\n            outline: none;\n          }\n        }\n        /* #cancel {\n          position: absolute;\n          right: 0;\n          z-index: 100;\n        } */\n\n        /* @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-header-bar {\n            --mdc-theme-primary: var(--app-header-background-color);\n            --mdc-theme-on-primary: var(--app-header-text-color, white);\n            border-bottom: none;\n          }\n        } */\n\n        .heading {\n          border-bottom: 1px solid var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n\n        @media all and (min-width: 451px) and (min-height: 501px) {\n          ha-dialog {\n            --mdc-dialog-max-width: 90vw;\n          }\n\n          .content {\n            width: 352px;\n          }\n\n          ha-header-bar {\n            width: 400px;\n          }\n\n          .main-title {\n            overflow: hidden;\n            text-overflow: ellipsis;\n            cursor: default;\n          }\n\n          ha-dialog[data-domain='camera'] .content,\n          ha-dialog[data-domain='camera'] ha-header-bar {\n            width: auto;\n          }\n\n          :host([large]) .content {\n            width: calc(90vw - 48px);\n          }\n\n          :host([large]) ha-dialog[data-domain='camera'] .content,\n          :host([large]) ha-header-bar {\n            width: 90vw;\n          }\n        }\n\n        ha-dialog[data-domain='camera'] {\n          --dialog-content-padding: 0;\n        }\n\n        state-card-content,\n        ha-more-info-logbook:not(:last-child) {\n          display: flex;\n          flex-direction: column;\n          align-items: stretch;\n          margin-bottom: 15px;\n        }\n        ha-more-info-history {\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 15px;\n        }\n        /* @media all and (max-width: 650px) {\n          state-card-content {\n            width: 250px;\n          }\n        } */\n      `,\r\n        ];\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], MoreInfoDialog.prototype, \"hass\", void 0);\r\n__decorate([\r\n    property({ type: Boolean, reflect: true })\r\n], MoreInfoDialog.prototype, \"large\", void 0);\r\n__decorate([\r\n    state()\r\n], MoreInfoDialog.prototype, \"_entityId\", void 0);\r\n__decorate([\r\n    state()\r\n], MoreInfoDialog.prototype, \"_currTabIndex\", void 0);\r\nMoreInfoDialog = __decorate([\r\n    customElement('ha-more-info-dialog')\r\n], MoreInfoDialog);\r\nexport { MoreInfoDialog };\r\n","references":["/workspaces/alarmo/frontend/node_modules/@mdi/js/mdi.d.ts","/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/node_modules/lit/directives/cache.d.ts","/workspaces/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/alarmo/frontend/src/styles/ha-styles.ts"]}
