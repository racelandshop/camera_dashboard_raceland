{"code":"import { __decorate } from \"tslib\";\r\nimport { mdiClose, mdiMagnify } from '@mdi/js';\r\nimport { css, html, LitElement } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators';\r\nimport { fireEvent } from 'custom-card-helpers';\r\nlet SearchInputRound = class SearchInputRound extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.suffix = false;\r\n        this.autofocus = false;\r\n    }\r\n    focus() {\r\n        var _a;\r\n        (_a = this._input) === null || _a === void 0 ? void 0 : _a.focus();\r\n    }\r\n    render() {\r\n        return html `\n      <ha-textfield\n        class=\"rounded\"\n        outlined\n        .autofocus=${this.autofocus}\n        .label=${this.label || 'Search'}\n        .value=${this.filter || ''}\n        icon\n        .iconTrailing=${this.filter || this.suffix}\n        @input=${this._filterInputChanged}\n      >\n        <slot name=\"prefix\" slot=\"leadingIcon\">\n          <ha-svg-icon tabindex=\"-1\" class=\"prefix\" .path=${mdiMagnify}></ha-svg-icon>\n        </slot>\n        <div class=\"trailing\" slot=\"trailingIcon\">\n          ${this.filter &&\r\n            html `\n              <ha-icon-button\n                @click=${this._clearSearch}\n                .label=${this.hass.localize('ui.common.clear')}\n                .path=${mdiClose}\n                class=\"clear-button\"\n              ></ha-icon-button>\n            `}\n          <slot name=\"suffix\"></slot>\n        </div>\n      </ha-textfield>\n    `;\r\n    }\r\n    async _filterChanged(value) {\r\n        fireEvent(this, 'value-changed', { value: String(value) });\r\n    }\r\n    async _filterInputChanged(e) {\r\n        this._filterChanged(e.target.value);\r\n    }\r\n    async _clearSearch() {\r\n        this._filterChanged('');\r\n    }\r\n    static get styles() {\r\n        return css `\n      :host {\n        display: inline-flex;\n      }\n      ha-svg-icon,\n      ha-icon-button {\n        color: var(--primary-text-color);\n      }\n      ha-svg-icon {\n        outline: none;\n      }\n      .clear-button {\n        --mdc-icon-size: 20px;\n      }\n      ha-textfield.rounded {\n        --mdc-shape-small: 28px;\n        width: 100%;\n      }\n      .trailing {\n        display: flex;\n        align-items: center;\n      }\n    `;\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], SearchInputRound.prototype, \"hass\", void 0);\r\n__decorate([\r\n    property()\r\n], SearchInputRound.prototype, \"filter\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], SearchInputRound.prototype, \"suffix\", void 0);\r\n__decorate([\r\n    property({ type: Boolean })\r\n], SearchInputRound.prototype, \"autofocus\", void 0);\r\n__decorate([\r\n    property({ type: String })\r\n], SearchInputRound.prototype, \"label\", void 0);\r\n__decorate([\r\n    query('ha-textfield', true)\r\n], SearchInputRound.prototype, \"_input\", void 0);\r\nSearchInputRound = __decorate([\r\n    customElement('search-input-round')\r\n], SearchInputRound);\r\n","references":["/workspaces/alarmo/frontend/node_modules/@mdi/js/mdi.d.ts","/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts"]}
