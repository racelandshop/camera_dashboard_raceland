{"code":"import { __decorate } from \"tslib\";\r\nimport { mdiCheckboxMarkedCircle, mdiChevronLeft, mdiDelete } from '@mdi/js';\r\nimport { css, html, LitElement } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators';\r\nimport { classMap } from 'lit/directives/class-map';\r\nimport { fireEvent } from 'custom-card-helpers';\r\nimport { removeCamera, fetchCameraInformation } from '../../data/websocket';\r\nimport { localize } from '../../localize/localize';\r\nexport const haStyleDialog = css `\n  /* mwc-dialog (ha-dialog) styles */\n  ha-dialog {\n    --mdc-dialog-min-width: 400px;\n    --mdc-dialog-max-width: 600px;\n    --mdc-dialog-heading-ink-color: var(--primary-text-color);\n    --mdc-dialog-content-ink-color: var(--primary-text-color);\n    --justify-action-buttons: space-between;\n    --mdc-switch__pointer_events: auto;\n  }\n\n  ha-dialog .form {\n    padding-bottom: 24px;\n    color: var(--primary-text-color);\n  }\n\n  a {\n    color: var(--accent-color) !important;\n  }\n\n  /* make dialog fullscreen on small screens */\n  @media all and (max-width: 450px), all and (max-height: 500px) {\n    ha-dialog {\n      --mdc-dialog-min-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-max-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --vertial-align-dialog: flex-end;\n      --ha-dialog-border-radius: 0px;\n    }\n  }\n  mwc-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n  .error {\n    color: var(--error-color);\n  }\n`;\r\nlet HuiDeleteDialogCamera = class HuiDeleteDialogCamera extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._currTabIndex = 0;\r\n    }\r\n    async showDialog(params) {\r\n        this._params = params;\r\n        this.cameraConfiguration = await fetchCameraInformation(this.hass, this._params.cameraInfo.entityID);\r\n    }\r\n    closeDialog() {\r\n        this._params = undefined;\r\n        fireEvent(this, 'dialog-closed', { dialog: this.localName });\r\n    }\r\n    render() {\r\n        if (!this._params) {\r\n            return html ``;\r\n        }\r\n        return html `\n      <ha-dialog\n        open\n        scrimClickAction\n        hideActions\n        .heading=${localize('common.delete_camera')}\n        class=${classMap({ table: this._currTabIndex === 1 })}\n        @closed=${this.closeDialog}\n      >\n        <div class=\"header\" slot=\"heading\">\n          <ha-header-bar>\n            <span slot=\"title\">\n              <ha-svg-icon class=\"header-icon\" slot=\"icon\" .path=${mdiDelete}></ha-svg-icon>\n            </span>\n          </ha-header-bar>\n        </div>\n        <div class=\"content\">\n          <div class=\"contentFather\">\n            <div class=\"text\">\n              <p class=\"big-text\">${localize('common.delete_camera')}</p>\n              <p class=\"small-text\">${localize('dialog_text.verify_action')}</p>\n            </div>\n          </div>\n        </div>\n        <div class=\"options\">\n          <mwc-button class=\"button-cancel\" @click=${this._cancel}>\n            <ha-svg-icon class=\"icon-back\" slot=\"icon\" .path=${mdiChevronLeft}></ha-svg-icon>\n            ${localize('common.back')}\n          </mwc-button>\n          <mwc-button class=\"button-confirm\" @click=${this._delete}>\n            <ha-svg-icon class=\"confirm-icon\" slot=\"icon\" .path=${mdiCheckboxMarkedCircle}></ha-svg-icon>\n            ${localize('common.confirm')}\n          </mwc-button>\n        </div>\n      </ha-dialog>\n    `;\r\n    }\r\n    _cancel(ev) {\r\n        //if (ev) {\r\n        //  ev.stopPropagation();\r\n        //}\r\n        this.closeDialog();\r\n    }\r\n    async _delete(ev) {\r\n        var _a, _b;\r\n        //if (ev) {\r\n        //  ev.stopPropagation();\r\n        //}\r\n        const result = await removeCamera(this.hass, (_a = this.cameraConfiguration) === null || _a === void 0 ? void 0 : _a.unique_id, (_b = this.cameraConfiguration) === null || _b === void 0 ? void 0 : _b.entityID);\r\n        if (result === true) {\r\n            this.closeDialog();\r\n            fireEvent(this, 'update-camera-dashboard');\r\n        }\r\n    }\r\n    static get styles() {\r\n        return [\r\n            haStyleDialog,\r\n            css `\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            --mdc-dialog-max-height: 100%;\n            height: 100%;\n          }\n        }\n\n        @media all and (min-width: 800px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 500px;\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          hui-entity-picker-table {\n            height: calc(100vh - 158px);\n          }\n        }\n\n        ha-dialog {\n          --mdc-dialog-max-width: 500px;\n          --dialog-content-padding: 2px 24px 20px 24px;\n          --dialog-z-index: 5;\n        }\n\n        ha-header-bar {\n          --mdc-theme-on-primary: var(--primary-text-color);\n          --mdc-theme-primary: var(--mdc-theme-surface);\n          flex-shrink: 0;\n          border-bottom: 1px solid var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n        .content {\n          width: 100%;\n        }\n        .button-cancel {\n          background-color: #a3abae;\n          float: left;\n          width: 90px;\n        }\n        .options {\n          width: 100%;\n        }\n\n        .button-confirm {\n          background-color: #4ba2ff;\n          float: right;\n        }\n        .header {\n          height: 80px;\n        }\n        mwc-button {\n          padding: 10px;\n          /* text-align: center; */\n          text-decoration: none;\n          display: inline-block;\n          font-size: 16px;\n          margin: 4px 2px;\n          border-radius: 30px;\n          cursor: pointer;\n          box-shadow: 0px 0px 5px 0px rgba(1, 1, 1, 0);\n          --mdc-theme-primary: white;\n          margin-bottom: 40px;\n        }\n\n        .header_button {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        mwc-tab-bar {\n          border-bottom: 1px solid var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n        .confirm-icon {\n          width: 20px;\n          height: 40px;\n        }\n        .header-icon {\n          width: 60px;\n          height: 60px;\n          padding-top: 50px;\n          color: #7b7b7b;\n        }\n        .text {\n          margin: 0px 0px 20px 0px;\n        }\n        .big-text {\n          /* font-family: \"Roboto\"; */\n          font-style: normal;\n          font-weight: 500;\n          font-size: 36px;\n          line-height: 42px;\n          color: #303033;\n          margin: 10px;\n        }\n        .small-text {\n          /* font-family: \"Roboto\"; */\n          font-style: normal;\n          font-weight: 400;\n          font-size: 18px;\n          line-height: 21px;\n          color: #303033;\n          margin: 10px;\n        }\n        ha-svg-icon {\n          margin-left: 0px;\n          margin-right: 6px;\n          display: inline-block;\n          position: relative;\n          vertical-align: top;\n          font-size: 1.125rem;\n          height: 2.125rem;\n          width: 1.7rem;\n        }\n        @media only screen and (max-width: 500px) {\n          .content {\n            width: 100%;\n            height: 171vw;\n          }\n        }\n      `,\r\n        ];\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiDeleteDialogCamera.prototype, \"hass\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiDeleteDialogCamera.prototype, \"_params\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiDeleteDialogCamera.prototype, \"cameraConfiguration\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiDeleteDialogCamera.prototype, \"_currTabIndex\", void 0);\r\nHuiDeleteDialogCamera = __decorate([\r\n    customElement('delete-camera-dialog')\r\n], HuiDeleteDialogCamera);\r\nexport { HuiDeleteDialogCamera };\r\n","references":["/workspaces/alarmo/frontend/node_modules/@mdi/js/mdi.d.ts","/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/node_modules/lit/directives/class-map.d.ts","/workspaces/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/alarmo/frontend/src/helpers/show-delete-camera-dialog.ts","/workspaces/alarmo/frontend/src/types.ts","/workspaces/alarmo/frontend/src/data/websocket.ts","/workspaces/alarmo/frontend/src/localize/localize.ts"]}
