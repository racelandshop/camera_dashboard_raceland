{"code":"import { __decorate } from \"tslib\";\r\nimport { mdiChevronLeft, mdiPlus } from '@mdi/js';\r\nimport { css, html, LitElement } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators';\r\nimport { classMap } from 'lit/directives/class-map';\r\nimport { getCameraEntities, removeTrailingSpacesInput } from '../../common';\r\nimport { sendCameraInformation, sendCameraBrandInformation } from '../../data/websocket';\r\nimport { localize } from '../../localize/localize';\r\nexport const haStyleDialog = css `\n  /* mwc-dialog (ha-dialog) styles */\n  ha-dialog {\n    --mdc-dialog-min-width: 400px;\n    --mdc-dialog-max-width: 600px;\n    --mdc-dialog-heading-ink-color: var(--primary-text-color);\n    --mdc-dialog-content-ink-color: var(--primary-text-color);\n    --justify-action-buttons: space-between;\n    --mdc-switch__pointer_events: auto;\n  }\n\n  ha-dialog .form {\n    padding-bottom: 24px;\n    color: var(--primary-text-color);\n  }\n\n  a {\n    color: var(--accent-color) !important;\n  }\n\n  /* make dialog fullscreen on small screens */\n  @media all and (max-width: 450px), all and (max-height: 500px) {\n    ha-dialog {\n      --mdc-dialog-min-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-max-width: calc(100vw - env(safe-area-inset-right) - env(safe-area-inset-left));\n      --mdc-dialog-min-height: 100%;\n      --mdc-dialog-max-height: 100%;\n      --vertial-align-dialog: flex-end;\n      --ha-dialog-border-radius: 0px;\n    }\n  }\n  mwc-button.warning {\n    --mdc-theme-primary: var(--error-color);\n  }\n  .error {\n    color: var(--error-color);\n  }\n`;\r\nlet HuiCreateDialogCameraFormulary = class HuiCreateDialogCameraFormulary extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._currTabIndex = 0;\r\n        this._computeLabelCallback = schema => {\r\n            return localize(`form.${schema.name}`);\r\n        };\r\n    }\r\n    showDialog(params) {\r\n        this.schema = params.schema;\r\n        this.backEvent = params.backEvent;\r\n        this.data = params.data;\r\n        this.formType = params.formType;\r\n        this.cameraModelInfo = params.cameraModelInfo;\r\n        this.dialogOpen = true;\r\n        this.registeredCameras = getCameraEntities(this.hass.states).map((camera) => camera.name);\r\n    }\r\n    closeDialog() {\r\n        this._currTabIndex = 0;\r\n        this.dialogOpen = undefined;\r\n        return true;\r\n    }\r\n    render() {\r\n        if (!this.dialogOpen) {\r\n            return html ``;\r\n        }\r\n        const schemaBody = this.schema.body;\r\n        const schemaExtraOptions = this.schema.extra_options;\r\n        return html `\n      <ha-dialog\n        open\n        scrimClickAction\n        hideActions\n        @closed=${this.closeDialog}\n        class=${classMap({ table: this._currTabIndex === 1 })}\n      >\n        <div class=\"cancel\">\n          <div slot=\"heading\" class=\"heading\">\n            <ha-header-bar id=\"bar\">\n              <div slot=\"title\" class=\"main-title\" .title=${name}>\n                ${localize('common.add_camera')}\n              </div>\n              <ha-icon-button\n                slot=\"navigationIcon\"\n                dialogAction=\"cancel\"\n                .label=${this.hass.localize('ui.dialogs.more_info_control.dismiss')}\n                id=\"cancel\"\n                .path=${'M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z'}\n              ></ha-icon-button>\n            </ha-header-bar>\n          </div>\n        </div>\n        <div\n          class=\"content ${classMap({\r\n            'content-big': schemaBody.length < 6,\r\n        })} \"\n        >\n          <div class=\"contentFather\">\n            ${this.validIssue\r\n            ? html `\n                  <div class=\"form-issue\">${this.validIssue}</div>\n                `\r\n            : html ``}\n            <div class=\"form\">\n              <ha-form\n                .hass=${this.hass}\n                .data=${this.data}\n                .schema=${schemaBody}\n                .computeLabel=${this._computeLabelCallback}\n                @value-changed=${this._valueChanged}\n              ></ha-form>\n              ${schemaExtraOptions && this.data.advanced_options\r\n            ? html `\n                    <ha-form\n                      .hass=${this.hass}\n                      .data=${this.data}\n                      .schema=${schemaExtraOptions}\n                      .computeLabel=${this._computeLabelCallback}\n                      @value-changed=${this._valueChanged}\n                    ></ha-form>\n                  `\r\n            : html ``}\n            </div>\n          </div>\n        </div>\n        <div class=\"options\">\n          <ha-fab class=\"button-confirm\" .label=${this.schema.footer.accept} extended @click=${this._accept} })}>\n            <ha-svg-icon slot=\"icon\" .path=${mdiPlus}></ha-svg-icon>\n          </ha-fab>\n          ${this.backEvent\r\n            ? html `\n                <mwc-button class=\"button-back\" dialogAction=\"close\" @click=${this._goBack}>\n                  ${this.schema.footer.back}\n                  <ha-svg-icon class=\"icon-back\" slot=\"icon\" .path=${mdiChevronLeft}></ha-svg-icon>\n                </mwc-button>\n              `\r\n            : html ``}\n        </div>\n      </ha-dialog>\n    `;\r\n    }\r\n    _cancel(ev) {\r\n        //if (ev) {\r\n        //  ev.stopPropagation();\r\n        //}\r\n        this.closeDialog();\r\n    }\r\n    _valueChanged(ev) {\r\n        const config = removeTrailingSpacesInput(ev.detail.value);\r\n        this.data = Object.assign(Object.assign({}, this.data), config);\r\n    }\r\n    validInputCustom() {\r\n        if (!this.data.name) {\r\n            this.validIssue = localize('form.issues.name');\r\n            return false;\r\n        }\r\n        if (this.registeredCameras.includes(this.data.name)) {\r\n            this.validIssue = localize('form.issues.duplicated_camera_name');\r\n            return false;\r\n        }\r\n        if (!this.data.still_image_url && !this.data.stream_source) {\r\n            this.validIssue = localize('form.issues.static_stream_source_missing');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    validInput() {\r\n        if (!this.data.ip) {\r\n            this.validIssue = localize('form.issues.ip_missing');\r\n            return false;\r\n        }\r\n        if (isNaN(Number(this.data.channel)) || (this.data.channel !== undefined && this.data.channel <= 0)) {\r\n            this.validIssue = localize('form.issues.n_cameras');\r\n            return false;\r\n        }\r\n        let cameraNames = [];\r\n        const channel = parseInt(this.data.channel);\r\n        if (this.data.channel !== undefined && channel > 1) {\r\n            cameraNames = Array.from({ length: channel }, (_, k) => `${this.data.name} ${k + 1}`);\r\n        }\r\n        else {\r\n            cameraNames = [this.data.name];\r\n        }\r\n        if (cameraNames.filter(value => this.registeredCameras.includes(value)).length > 0) {\r\n            this.validIssue = localize('form.issues.duplicated_camera_name');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    async _accept() {\r\n        if (this.formType === 'custom_camera') {\r\n            const valid = this.validInputCustom();\r\n            if (valid === true) {\r\n                const result = await sendCameraInformation(this.hass, this.data);\r\n                if (result === true) {\r\n                    this.closeDialog();\r\n                    const updateCamerasEvent = new Event('updateCameras');\r\n                    document.dispatchEvent(updateCamerasEvent);\r\n                    //fireEvent(this, 'update-camera-dashboard');\r\n                }\r\n            }\r\n        }\r\n        else if (this.formType === 'brand_camera') {\r\n            const valid = this.validInput();\r\n            if (valid === true) {\r\n                await sendCameraBrandInformation(this.hass, this.data);\r\n                //console.log('this is the event listerner', document.listeners('update-camera-dashboard'));\r\n                console.log('dispatching event');\r\n                const updateCamerasEvent = new Event('update-camera-dashboard', {});\r\n                this.dispatchEvent(updateCamerasEvent);\r\n                this.closeDialog();\r\n                //fireEvent(this, 'update-camera-dashboard');\r\n            }\r\n        }\r\n    }\r\n    _goBack(ev) {\r\n        const element = ev.target;\r\n        console.log('This is the event data', this.backEvent.eventData);\r\n        this.backEvent.call(element, this.backEvent.eventData);\r\n    }\r\n    static get styles() {\r\n        return [\r\n            haStyleDialog,\r\n            css `\n        .content {\n          width: 83%;\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-dialog {\n            --mdc-dialog-max-height: 100%;\n            height: 100%;\n          }\n          .content-big {\n            width: 83%;\n            height: 225vw;\n          }\n        }\n\n        @media all and (min-width: 1000px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 900px;\n          }\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          hui-entity-picker-table {\n            height: calc(100vh - 158px);\n          }\n        }\n\n        ha-dialog {\n          --mdc-dialog-max-width: 500px;\n          --dialog-content-padding: 2px 24px 20px 24px;\n          --dialog-z-index: 5;\n        }\n        .options {\n          width: 100%;\n          position: sticky;\n          float: right;\n          right: calc(16px + env(safe-area-inset-right));\n          /* bottom: calc(16px + env(safe-area-inset-bottom)); */\n          z-index: 1;\n        }\n\n        ha-header-bar {\n          --mdc-theme-on-primary: var(--primary-text-color);\n          --mdc-theme-primary: var(--mdc-theme-surface);\n          flex-shrink: 0;\n          border-bottom: 1px solid var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n\n        ha-form {\n          margin-left: 8%;\n          margin-right: 8%;\n        }\n\n        ha-formfield {\n          display: flex;\n          height: 56px;\n          align-items: center;\n          --mdc-typography-body2-font-size: 1em;\n        }\n\n        .button-confirm {\n          /* background-color: #4ba2ff; */\n          float: right;\n        }\n\n        .button-back {\n          --mdc-theme-primary: #7b7b7b;\n          float: left;\n          /* margin-left: 5%; */\n        }\n\n        .form-issue {\n          font-family: 'Roboto';\n          font-style: normal;\n          font-size: 12px;\n          color: #e41111;\n          padding: 1% 1% 1% 12%;\n          text-align: left;\n          width: 100%;\n        }\n\n        .icon-back {\n          width: 30px;\n          height: 30px;\n        }\n        .form {\n          /* margin-left: 10%;\n          margin-right: 10%; */\n        }\n\n        .header-text {\n          font-family: 'Roboto';\n          font-style: normal;\n          font-weight: 500;\n          font-size: 36px;\n          line-height: 42px;\n          color: #303033;\n          padding: 1% 1% 1% 5%;\n          text-align: center;\n          width: 38%;\n        }\n\n        .brand-list {\n          display: grid;\n          grid-template-columns: 1fr 1fr 1fr;\n          grid-gap: 9%;\n          padding: 0px 55px 25px;\n        }\n\n        .cancel {\n          cursor: pointer;\n          /* padding: 20px 20px 20px 20px; */\n          width: 100%;\n        }\n\n        mwc-button {\n          /* padding: 10px; */\n          text-align: center;\n          text-decoration: none;\n          display: inline-block;\n          font-size: 16px;\n          margin: 4px 2px;\n          border-radius: 30px;\n          cursor: pointer;\n          box-shadow: 0px 0px 5px 0px rgba(1, 1, 1, 0);\n          --mdc-theme-primary: white;\n          margin-bottom: 40px;\n        }\n\n        .header_button {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        mwc-tab-bar {\n          border-bottom: 1px solid var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12));\n        }\n        .cancel-icon {\n          float: right;\n          width: 40px;\n          height: 40px;\n        }\n      `,\r\n        ];\r\n    }\r\n};\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraFormulary.prototype, \"hass\", void 0);\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraFormulary.prototype, \"dialogOpen\", void 0);\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraFormulary.prototype, \"data\", void 0);\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraFormulary.prototype, \"cameraModelInfo\", void 0);\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraFormulary.prototype, \"backEvent\", void 0);\r\n__decorate([\r\n    property({ type: String })\r\n], HuiCreateDialogCameraFormulary.prototype, \"formType\", void 0);\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraFormulary.prototype, \"schema\", void 0);\r\n__decorate([\r\n    property({ attribute: false })\r\n], HuiCreateDialogCameraFormulary.prototype, \"registeredCameras\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiCreateDialogCameraFormulary.prototype, \"_currTabIndex\", void 0);\r\n__decorate([\r\n    state()\r\n], HuiCreateDialogCameraFormulary.prototype, \"validIssue\", void 0);\r\nHuiCreateDialogCameraFormulary = __decorate([\r\n    customElement('raceland-formulary')\r\n], HuiCreateDialogCameraFormulary);\r\nexport { HuiCreateDialogCameraFormulary };\r\n","references":["/workspaces/alarmo/frontend/node_modules/@mdi/js/mdi.d.ts","/workspaces/alarmo/frontend/node_modules/lit/index.d.ts","/workspaces/alarmo/frontend/node_modules/lit/decorators.d.ts","/workspaces/alarmo/frontend/node_modules/lit/directives/class-map.d.ts","/workspaces/alarmo/frontend/node_modules/custom-card-helpers/dist/index.d.ts","/workspaces/alarmo/frontend/src/common.ts","/workspaces/alarmo/frontend/src/data/websocket.ts","/workspaces/alarmo/frontend/src/types.ts","/workspaces/alarmo/frontend/src/helpers/show-camera-form-dialog.ts","/workspaces/alarmo/frontend/src/localize/localize.ts"]}
