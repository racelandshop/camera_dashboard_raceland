const __DEMO__ = false;
    const __SUPERVISOR__ = true;
    const __BUILD__ = "latest"

import { _ as _decorate, d as e, t, G as i, b as memoizeOne, $, f as fireEvent, n, z as o, c as s } from './main-dev.js';
import 'lit-html/is-server.js';
import { ac as subscribeEntityRegistry, ad as showPromptDialog, a9 as showAlertDialog, e as computeDomain } from './auth-dev.js';
import { a as subscribeAreaRegistry, s as subscribeDeviceRegistry, c as createAreaRegistryEntry } from './device_registry-dev.js';
import { S as SubscribeMixin } from './subscribe-mixin-dev.js';
import './ha-combo-box-dev.js';

const rowRenderer=item=>$`<mwc-list-item
  class=${o({"add-new":item.area_id==="add_new"})}
>
  ${item.name}
</mwc-list-item>`;_decorate([n("ha-area-picker")],function(_initialize,_SubscribeMixin){class HaAreaPicker extends _SubscribeMixin{constructor(...args){super(...args);_initialize(this);}}return {F:HaAreaPicker,d:[{kind:"field",decorators:[e({attribute:false})],key:"hass",value:void 0},{kind:"field",decorators:[e()],key:"label",value:void 0},{kind:"field",decorators:[e()],key:"value",value:void 0},{kind:"field",decorators:[e()],key:"placeholder",value:void 0},{kind:"field",decorators:[e({type:Boolean,attribute:"no-add"})],key:"noAdd",value:void 0},{kind:"field",decorators:[e({type:Array,attribute:"include-domains"})],key:"includeDomains",value:void 0},{kind:"field",decorators:[e({type:Array,attribute:"exclude-domains"})],key:"excludeDomains",value:void 0},{kind:"field",decorators:[e({type:Array,attribute:"include-device-classes"})],key:"includeDeviceClasses",value:void 0},{kind:"field",decorators:[e()],key:"deviceFilter",value:void 0},{kind:"field",decorators:[e()],key:"entityFilter",value:void 0},{kind:"field",decorators:[e({type:Boolean})],key:"disabled",value:void 0},{kind:"field",decorators:[t()],key:"_areas",value:void 0},{kind:"field",decorators:[t()],key:"_devices",value:void 0},{kind:"field",decorators:[t()],key:"_entities",value:void 0},{kind:"field",decorators:[t()],key:"_opened",value:void 0},{kind:"field",decorators:[i("ha-combo-box",true)],key:"comboBox",value:void 0},{kind:"field",key:"_filter",value:void 0},{kind:"field",key:"_init",value(){return false;}},{kind:"method",key:"hassSubscribe",value:/**
   * Show only areas with entities from specific domains.
   * @type {Array}
   * @attr include-domains
   */ /**
   * Show no areas with entities of these domains.
   * @type {Array}
   * @attr exclude-domains
   */ /**
   * Show only areas with entities of these device classes.
   * @type {Array}
   * @attr include-device-classes
   */function hassSubscribe(){return [subscribeAreaRegistry(this.hass.connection,areas=>{this._areas=areas;}),subscribeDeviceRegistry(this.hass.connection,devices=>{this._devices=devices;}),subscribeEntityRegistry(this.hass.connection,entities=>{this._entities=entities;})];}},{kind:"method",key:"open",value:function open(){this.updateComplete.then(()=>{var _this$comboBox;(_this$comboBox=this.comboBox)===null||_this$comboBox===void 0?void 0:_this$comboBox.open();});}},{kind:"method",key:"focus",value:function focus(){this.updateComplete.then(()=>{var _this$comboBox2;(_this$comboBox2=this.comboBox)===null||_this$comboBox2===void 0?void 0:_this$comboBox2.focus();});}},{kind:"field",key:"_getAreas",value(){return memoizeOne((areas,devices,entities,includeDomains,excludeDomains,includeDeviceClasses,deviceFilter,entityFilter,noAdd)=>{if(!areas.length){return [{area_id:"no_areas",name:this.hass.localize("ui.components.area-picker.no_areas"),picture:null}];}const deviceEntityLookup={};let inputDevices;let inputEntities;if(includeDomains||excludeDomains||includeDeviceClasses){for(const entity of entities){if(!entity.device_id){continue;}if(!(entity.device_id in deviceEntityLookup)){deviceEntityLookup[entity.device_id]=[];}deviceEntityLookup[entity.device_id].push(entity);}inputDevices=devices;inputEntities=entities.filter(entity=>entity.area_id);}else {if(deviceFilter){inputDevices=devices;}if(entityFilter){inputEntities=entities.filter(entity=>entity.area_id);}}if(includeDomains){inputDevices=inputDevices.filter(device=>{const devEntities=deviceEntityLookup[device.id];if(!devEntities||!devEntities.length){return false;}return deviceEntityLookup[device.id].some(entity=>includeDomains.includes(computeDomain(entity.entity_id)));});inputEntities=inputEntities.filter(entity=>includeDomains.includes(computeDomain(entity.entity_id)));}if(excludeDomains){inputDevices=inputDevices.filter(device=>{const devEntities=deviceEntityLookup[device.id];if(!devEntities||!devEntities.length){return true;}return entities.every(entity=>!excludeDomains.includes(computeDomain(entity.entity_id)));});inputEntities=inputEntities.filter(entity=>!excludeDomains.includes(computeDomain(entity.entity_id)));}if(includeDeviceClasses){inputDevices=inputDevices.filter(device=>{const devEntities=deviceEntityLookup[device.id];if(!devEntities||!devEntities.length){return false;}return deviceEntityLookup[device.id].some(entity=>{const stateObj=this.hass.states[entity.entity_id];if(!stateObj){return false;}return stateObj.attributes.device_class&&includeDeviceClasses.includes(stateObj.attributes.device_class);});});inputEntities=inputEntities.filter(entity=>{const stateObj=this.hass.states[entity.entity_id];return stateObj.attributes.device_class&&includeDeviceClasses.includes(stateObj.attributes.device_class);});}if(deviceFilter){inputDevices=inputDevices.filter(device=>deviceFilter(device));}if(entityFilter){inputEntities=inputEntities.filter(entity=>entityFilter(entity));}let outputAreas=areas;let areaIds;if(inputDevices){areaIds=inputDevices.filter(device=>device.area_id).map(device=>device.area_id);}if(inputEntities){var _areaIds;areaIds=((_areaIds=areaIds)!==null&&_areaIds!==void 0?_areaIds:[]).concat(inputEntities.filter(entity=>entity.area_id).map(entity=>entity.area_id));}if(areaIds){outputAreas=areas.filter(area=>areaIds.includes(area.area_id));}if(!outputAreas.length){outputAreas=[{area_id:"no_areas",name:this.hass.localize("ui.components.area-picker.no_match"),picture:null}];}return noAdd?outputAreas:[...outputAreas,{area_id:"add_new",name:this.hass.localize("ui.components.area-picker.add_new"),picture:null}];});}},{kind:"method",key:"updated",value:function updated(changedProps){if(!this._init&&this._devices&&this._areas&&this._entities||changedProps.has("_opened")&&this._opened){this._init=true;this.comboBox.items=this._getAreas(this._areas,this._devices,this._entities,this.includeDomains,this.excludeDomains,this.includeDeviceClasses,this.deviceFilter,this.entityFilter,this.noAdd);}}},{kind:"method",key:"render",value:function render(){var _this$_area;if(!this._devices||!this._areas||!this._entities){return $``;}return $`
      <ha-combo-box
        .hass=${this.hass}
        item-value-path="area_id"
        item-id-path="area_id"
        item-label-path="name"
        .value=${this.value}
        .disabled=${this.disabled}
        .label=${this.label===undefined&&this.hass?this.hass.localize("ui.components.area-picker.area"):this.label}
        .placeholder=${this.placeholder?(_this$_area=this._area(this.placeholder))===null||_this$_area===void 0?void 0:_this$_area.name:undefined}
        .renderer=${rowRenderer}
        @filter-changed=${this._filterChanged}
        @opened-changed=${this._openedChanged}
        @value-changed=${this._areaChanged}
      >
      </ha-combo-box>
    `;}},{kind:"field",key:"_area",value(){return memoizeOne(areaId=>{var _this$_areas;return (_this$_areas=this._areas)===null||_this$_areas===void 0?void 0:_this$_areas.find(area=>area.area_id===areaId);});}},{kind:"method",key:"_filterChanged",value:function _filterChanged(ev){var _this$comboBox$_combo;this._filter=ev.detail.value;if(!this._filter){this.comboBox.filteredItems=this.comboBox.items;return;}// @ts-ignore
if(!this.noAdd&&((_this$comboBox$_combo=this.comboBox._comboBox.filteredItems)===null||_this$comboBox$_combo===void 0?void 0:_this$comboBox$_combo.length)===0){this.comboBox.filteredItems=[{area_id:"add_new_suggestion",name:this.hass.localize("ui.components.area-picker.add_new_sugestion",{name:this._filter}),picture:null}];}else {var _this$comboBox$items;this.comboBox.filteredItems=(_this$comboBox$items=this.comboBox.items)===null||_this$comboBox$items===void 0?void 0:_this$comboBox$items.filter(item=>item.name.toLowerCase().includes(this._filter.toLowerCase()));}}},{kind:"get",key:"_value",value:function _value(){return this.value||"";}},{kind:"method",key:"_openedChanged",value:function _openedChanged(ev){this._opened=ev.detail.value;}},{kind:"method",key:"_areaChanged",value:function _areaChanged(ev){ev.stopPropagation();let newValue=ev.detail.value;if(newValue==="no_areas"){newValue="";}if(!["add_new_suggestion","add_new"].includes(newValue)){if(newValue!==this._value){this._setValue(newValue);}return;}ev.target.value=this._value;showPromptDialog(this,{title:this.hass.localize("ui.components.area-picker.add_dialog.title"),text:this.hass.localize("ui.components.area-picker.add_dialog.text"),confirmText:this.hass.localize("ui.components.area-picker.add_dialog.add"),inputLabel:this.hass.localize("ui.components.area-picker.add_dialog.name"),defaultValue:newValue==="add_new_suggestion"?this._filter:undefined,confirm:async name=>{if(!name){return;}try{const area=await createAreaRegistryEntry(this.hass,{name});this._areas=[...this._areas,area];this.comboBox.items=this._getAreas(this._areas,this._devices,this._entities,this.includeDomains,this.excludeDomains,this.includeDeviceClasses,this.deviceFilter,this.entityFilter,this.noAdd);await this.updateComplete;await this.comboBox.updateComplete;this._setValue(area.area_id);}catch(err){showAlertDialog(this,{title:this.hass.localize("ui.components.area-picker.add_dialog.failed_create_area"),text:err.message});}}});}},{kind:"method",key:"_setValue",value:function _setValue(value){this.value=value;setTimeout(()=>{fireEvent(this,"value-changed",{value});fireEvent(this,"change");},0);}}]};},SubscribeMixin(s));
